react:
  message:
    server:
      count:
        b: ' servers on the network using react.'
        a: 'There are '
      current: 'You are on '
    sided:
      ingame: You must be in-game to use this_
      console: You must use this from the console.
    paper:
      unsupported: React Timings Processing does not yet support PaperSpigot as PaperSpigot modifies the api for getting timings causing all sorts of issues.
    heartbeat:
      start: STARTING HEART BEAT THREAD
    'no':
      data: No Data. This typically means you are not on a bungeecord network.
    help:
      samplers:
        b: Shows all of the samplers react uses.
        a: /re help samplers
      reactions:
        a: /re help reactions
        b: Shows all of the actions that can be used by react.
      guess: /react guess -m 1024 >> Guess players with 1g of mem
      monitoring:
        a: /re help monitoring
        b: Information on how to monitor.
      about:
        b: General information on what react is, and how to get started.
        a: /re help about
    fixed: Fixed!
    garbage: 'Garbage: '
    player:
      only: You must be ingame to use this.
    monitoring:
      disabled: Monitoring Disabled
      enabled: Monitoring Enabled
    console:
      only: You must use this from the console.
    manual:
      started: ' started.'
      finish: 'Manual Action: '
    unknown:
      book: Unknown book. Use /re help
      action: Unknown Action. Use /re act for a list of actions.
    monitor:
      lock:
        fail: Please turn on monitoring to lock tabs.
    plugins: 'Plugins/Other: '
    queryresult: Queried Result
    chunks: 'Chunks: '
    verbose: 'Verbose: '
    insufficient:
      permission: Insufficient Permission
    mapping:
      enabled: Mapping Enabled
      disabled: Mapping Disabled
    error:
      nonumber: 'Not a number: '
      latestversion: You have the latest version!
      pluginunknown: Unknown Plugin
    issues: Stabilizing...
    lang:
      help: /re lang <language>
      unknown: Unknown language
    action:
      fully:
        automatic: ' is a fully automatic action.'
      stabilizing: Stabilizing...
    internal:
      reloaded: Reloaded
    memory:
      max: 'Max Memory: '
      used: 'Used Memory: '
    reloaded: ' Reloaded'
    verboseoff: Verbose Disabled
    book: Book given/updated
    world:
      save: 'SAVING WORLD: '
      saveinvalid: Not Saving... We Just Saved!
      success: PRECAUTIONS TAKEN. HOPEFULLY WE WONT CRASH!
      warning: 'WARNING: SERVER WAS LAGGING HARD ON THE LAST TICK'
      playersave: SAVING PLAYERS...
      disable: HEART BEAT SAVING DISABLED. Not saving worlds or players.
      precaution: REACT IS TAKING PRECAUTIONS TO ENSURE NO DATA IS LOST IN THE EVENT OF A CRASH
    hook:
      attempt: Attempting to hook into Placeholder API
      success: Hooked into Placeholder API
    players: 'Players: '
    bungeeoff: Bungeecord support is off.
    update:
      found: 'Update Found: '
    dumped: 'Created a dump file to '
    verboseon: Verbose Enabled
    cpuscore: 'CPU Score: '
  language:
    name: English
    code: en
  book:
    trialerror:
      title: Trial & Error
      text: Since there are many ways to fix one problem, react will try several different things to fix an issue. If it fixes, react keeps using that method. This means react tailors itself to your server over time.
    configuration:
      title: Configuration
      text: React is highly configurable. You can disable any feature you wish, and configure any timings as you like. React can be taylored to literally any server.
    persistance:
      title: Persistance
      text: If you log off, or the server reboots, your monitor/map mode will be turned back on (unless you turn it off)
    reactions:
      text: Since react is sampling many aspects of the server, we can now determine the source of the lag. This allows us to 'react to it', fixing the problem automatically.
      title: Reactions
    greeting:
      text: React is a plugin that handles server lag in a judge & react way. This plugin does not just remove entities on a timer and call it 'lag remover'. React fixes this problem.
    monitoring:
      text: React is not opaque. You are able to view everything react sees, to start monitoring, use /react monitor, but you may want to use /re help monitoring first to see how it works.
      title: Monitoring
    monitor:
      text: The base command for monitoring is /re mon (/react monitor). This command sends title messages to you with numbers. If you don't know what a sample is, use /re help samplers
      title: How to Monitor
    samples:
      title: Samples
      text: For React to accuratley judge lag, you cannot simply track the Ticks per second. If you dont know what is CAUSING the lag, you can't guarantee a fix. Welcome to react!
    performance:
      text: You can also view a live graph of your server performence. It is rendered on a map. Use /re map
      title: Performence Charting
    tabs:
      title: Changing Tabs
      text: Each element in the monitor actually contains more samples. Hold Shift and scroll your mouse wheel to select the tab you like. Try it!
  command:
    plugins: List plugin timings
    help: Sends a book of information on help topics.
    version: Compares your version with any new ones.
    servers: List all servers on the network with data.
    query: Query information on plugin(s).
    map: enables visual graphical monitoring
    list: List all servers on the network with data.
    guessmemory: Guess server capabilities with X Ram
    guess: Guess Server Capabilities.
    cpuscore: Get your server's CPU score.
    act: Run actions (or turn on/off automatic actions)
    book: Sends a book of updated issues react finds.
    lang: Change or list supported languages
    reload: reloads all react configuration files.
    monitor: enables title-text monitoring
    update: Force Download the latest copy of react.
    status: Sends a book of updated issues React finds.
    timings: Send a book of the hardest hitting timings.
  gui:
    actions: Actions
  monitoring: Monitoring
  samplers: Samplers
  reactions: Reactions
  example: Example
  react:
    name: React
